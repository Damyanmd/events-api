{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Udemy code React\\\\20-practice\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      events: data.events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventsId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  console.log(response);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","EventDetailPage","data","console","log","events","loader","request","params","id","eventsId","response","fetch","ok","message","status"],"sources":["C:/Users/User/OneDrive/Документи/Udemy code React/20-practice/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useLoaderData();\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <EventItem events={data.events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventsId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n  console.log(response);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected event.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAAA;AAEhD,SAASC,eAAe,GAAG;EAAA;EACzB,MAAMC,IAAI,GAAGJ,aAAa,EAAE;EAC5BK,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,oBACE;IAAA,uBACE,QAAC,SAAS;MAAC,MAAM,EAAEA,IAAI,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG,iBACjC;AAEP;AAAC,GARQJ,eAAe;EAAA,QACTH,aAAa;AAAA;AAAA,KADnBG,eAAe;AAUxB,eAAeA,eAAe;AAE9B,OAAO,eAAeK,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClEN,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;EACrB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMd,IAAI,CACR;MAAEe,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAAC,CAChB;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}