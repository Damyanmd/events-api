{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\Udemy code React\\\\20-practice\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  console.log(response);\n  if (!response.ok) {\n    return json({\n      message: \"Could not fetched events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","EventsPage","data","events","console","log","loader","response","fetch","ok","message","status"],"sources":["C:/Users/User/OneDrive/Документи/Udemy code React/20-practice/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n  const events = data.events;\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  console.log(response);\r\n\r\n  if (!response.ok) {\r\n    return json({ message: \"Could not fetched events\" }, { status: 500 });\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAAA;AAElD,SAASC,UAAU,GAAG;EAAA;EACpB,MAAMC,IAAI,GAAGJ,aAAa,EAAE;EAE5B,MAAMK,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,oBACE;IAAA,uBACE,QAAC,UAAU;MAAC,MAAM,EAAEC;IAAO;MAAA;MAAA;MAAA;IAAA;EAAG,iBAC7B;AAEP;AAAC,GAVQF,UAAU;EAAA,QACJH,aAAa;AAAA;AAAA,KADnBG,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAeK,MAAM,GAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5DJ,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;EAErB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOV,IAAI,CAAC;MAAEW,OAAO,EAAE;IAA2B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}